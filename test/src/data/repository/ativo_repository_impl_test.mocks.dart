// Mocks generated by Mockito 5.2.0 from annotations
// in variacao_ativo/test/src/data/repository/ativo_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:variacao_ativo/src/data/data_source/ativo_datasource.dart'
    as _i6;
import 'package:variacao_ativo/src/domain/entitie/ativo_entity.dart' as _i3;
import 'package:variacao_ativo/src/domain/repository/ativo_repository.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeAtivoEntity_1 extends _i1.Fake implements _i3.AtivoEntity {}

/// A class which mocks [AtivoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAtivoRepository extends _i1.Mock implements _i4.AtivoRepository {
  MockAtivoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<Exception, _i3.AtivoEntity>> getVariacaoAtivo() =>
      (super.noSuchMethod(Invocation.method(#getVariacaoAtivo, []),
              returnValue: Future<_i2.Either<Exception, _i3.AtivoEntity>>.value(
                  _FakeEither_0<Exception, _i3.AtivoEntity>()))
          as _i5.Future<_i2.Either<Exception, _i3.AtivoEntity>>);
}

/// A class which mocks [AtivoDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAtivoDataSource extends _i1.Mock implements _i6.AtivoDataSource {
  MockAtivoDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.AtivoEntity> getVariacaoAtivo() =>
      (super.noSuchMethod(Invocation.method(#getVariacaoAtivo, []),
              returnValue: Future<_i3.AtivoEntity>.value(_FakeAtivoEntity_1()))
          as _i5.Future<_i3.AtivoEntity>);
}
